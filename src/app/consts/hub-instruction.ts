/**
 * All available instructions.
 */
export enum HUB_INSTRUCTION {
  /**
   * @payload: Item to add.
   *
   */
  ADD_ITEM_TO_LIST = 'ADD_ITEM_TO_LIST',
  ADD_ITEM_TO_PROGRAM = 'ADD_ITEM_TO_PROGRAM',
  BLANK_INSTRUCTION = 'BLANK_INSTRUCTION',
  DETECT_CHANGE = 'DETECT_CHANGE',
  PROGRAM_DELETE_ITEM = 'PROGRAM_DELETE_ITEM',
  PROGRAM_LIST_READ_NEXT = 'PROGRAM_LIST_READ_NEXT',
  PROGRAM_LIST_SET_CURRENT_READ = 'PROGRAM_LIST_SET_CURRENT_READ',
  PROGRAM_LIST_SET_CURRENT_UNREAD = 'PROGRAM_LIST_SET_CURRENT_UNREAD',
  PROGRAM_SELECT_PROGRAM_ITEMS = 'PROGRAM_SELECT_PROGRAM_ITEMS',
  PROGRAM_UNSELECT_PROGRAM_ITEMS = 'PROGRAM_UNSELECT_PROGRAM_ITEMS',
  PROGRAM_SET_PROGRAM_ITEM_IMPORTANCE = 'PROGRAM_SET_PROGRAM_ITEM_IMPORTANCE',
  ITEM_CONTROL_SET_ITEM_IMPORTANCE = 'ITEM_CONTROL_SET_ITEM_IMPORTANCE',
  SELECT_ITEM = 'SELECT_ITEM',
  UNSELECT_ITEM = 'UNSELECT_ITEM',
  READING_SERVICE_SET_CURRENT_ITEM_READ = 'READING_SERVICE_SET_CURRENT_ITEM_READ',
  SET_PROGRAMLIST_ITEM_READ_BY_PROGRAMITEM_ID = 'SET_PROGRAMLIST_ITEM_READ_BY_PROGRAMITEM_ID',
  PROGRAM_SERVICE_SET_PROGRAMITEM_READ_BY_ITEMID = 'PROGRAM_SERVICE_SET_PROGRAMITEM_READ_BY_ITEMID',
  ADD_ITEM = "ADD_ITEM",
  REMOVE_ITEM = "REMOVE_ITEM",
  UNSELECT_ALL_EXCEPT = "UNSELECT_ALL_EXCEPT",
  ANNOUNCE_SINGLE_SELECTION = "ANNOUNCE_SINGLE_SELECTION",
  NAVIGATE_TO_PRIMARY = "NAVIGATE_TO_PRIMARY",

  NAVIGATE_TO_SECONDARY = "NAVIGATE_TO_SECONDARY",
  RELOAD_MAIN_DATA = "RELOAD_MAIN_DATA",
  ADD_FILES_TO_LIST = "ADD_FILES_TO_LIST",
  UPDATE_SELECTED_TAG_IDS = "UPDATE_SELECTED_TAG_IDS",
  RELOAD_ITEMS = "RELOAD_ITEMS",
  READ_NEXT = "READ_NEXT",
  RFSERVER_HAS_STARTED = "RFSERVER_HAS_STARTED",
  RFSERVER_HAS_STOPPED = "RFSERVER_HAS_STOPPED",
  SHOW_PROJECT_PROGRAMS = "SHOW_PROJECT_PROGRAMS",

  SHOW_ROUTINE_PROGRAMS = "SHOW_ROUTINE_PROGRAMS",
  ADD_ZOTERO_COLLECTION_KEY = "ADD_ZOTERO_COLLECTION_KEY",

}


export enum IMPORT_SOURCE_INSTRUCTIONS {
  ADD_ZOTERO_COLLECTION_KEY = HUB_INSTRUCTION.ADD_ZOTERO_COLLECTION_KEY
}
/**
 * Specific instructions that receiver components handle with switch, a subset of all avaialble instructions.
 */
export enum BLANK_INSTRUCTIONS {
  BLANK_INSTRUCTION = HUB_INSTRUCTION.BLANK_INSTRUCTION
}

export enum ROUTING_INSTRUCTION {
  NAVIGATE_TO_PRIMARY = HUB_INSTRUCTION.NAVIGATE_TO_PRIMARY,
  NAVIGATE_TO_SECONDARY = HUB_INSTRUCTION.NAVIGATE_TO_SECONDARY
}


export enum EVERYONE_INSTRUCTIONS {
  ANNOUNCE_SINGLE_SELECTION = HUB_INSTRUCTION.ANNOUNCE_SINGLE_SELECTION,
  RFSERVER_HAS_STARTED = HUB_INSTRUCTION.RFSERVER_HAS_STARTED,
  RFSERVER_HAS_STOPPED = HUB_INSTRUCTION.RFSERVER_HAS_STOPPED,

}

export enum DATA_VIEWER_INSTRUCTIONS {
  RELOAD_MAIN_DATA = HUB_INSTRUCTION.RELOAD_MAIN_DATA,
  RELOAD_ITEMS = HUB_INSTRUCTION.RELOAD_ITEMS,
}

export enum PROJECT_BROWSER_SERVICE_INSTRUCTION {

}

export enum SIDEPANEL_INSTRUCTIONS {

}


export enum LIST_BROWSER_SERVICE_INSTRUCTION {
  RELOAD_MAIN_DATA = DATA_VIEWER_INSTRUCTIONS.RELOAD_MAIN_DATA
}

export enum PROGRAM_BROWSER_SERVICE_INSTRUCTION {
  RELOAD_MAINDATA = DATA_VIEWER_INSTRUCTIONS.RELOAD_MAIN_DATA,

  SHOW_ROUTINE_PROGRAMS = HUB_INSTRUCTION.SHOW_ROUTINE_PROGRAMS,
  SHOW_PROJECT_PROGRAMS = HUB_INSTRUCTION.SHOW_PROJECT_PROGRAMS,
}

export enum ITEM_TAGGING_SERVICE_INSTRUCTIONS {
  // payload = new selected tag's ids
  UPDATE_SELECTED_TAG_IDS = HUB_INSTRUCTION.UPDATE_SELECTED_TAG_IDS
}

export enum PROGRAM_VIEWER_INSTRUCTIONS {
  ADD_ITEMS_TO_PROGRAM = HUB_INSTRUCTION.ADD_ITEM_TO_PROGRAM,
  PROGRAM_DELETE_PROGRAM_ITEM = HUB_INSTRUCTION.PROGRAM_DELETE_ITEM,

  PROGRAM_LIST_READ_NEXT = HUB_INSTRUCTION.PROGRAM_LIST_READ_NEXT,
  PROGRAM_SELECT_PROGRAM_ITEMS = HUB_INSTRUCTION.PROGRAM_SELECT_PROGRAM_ITEMS,
  PROGRAM_UNSELECT_PROGRAM_ITEMS = HUB_INSTRUCTION.PROGRAM_UNSELECT_PROGRAM_ITEMS,
  PROGRAM_SET_PROGRAM_ITEM_IMPORTANCE = HUB_INSTRUCTION.PROGRAM_SET_PROGRAM_ITEM_IMPORTANCE,

  SET_PROGRAM_LIST_ITEM_READ = HUB_INSTRUCTION.SET_PROGRAMLIST_ITEM_READ_BY_PROGRAMITEM_ID,

  PROGRAM_SERVICE_SET_PROGRAMITEM_READ_BY_ITEMID = HUB_INSTRUCTION.PROGRAM_SERVICE_SET_PROGRAMITEM_READ_BY_ITEMID,
  UNSELECT_ALL_ENTRIES_EXCEPT = HUB_INSTRUCTION.UNSELECT_ALL_EXCEPT,
  RELOAD_DATA = DATA_VIEWER_INSTRUCTIONS.RELOAD_MAIN_DATA,
  RELOAD_ITEMS = DATA_VIEWER_INSTRUCTIONS.RELOAD_ITEMS,
}

export enum PROGRAM_LIST_ITEM_INSTRUCTIONS {
  RELOAD_DATA = DATA_VIEWER_INSTRUCTIONS.RELOAD_MAIN_DATA
}

export enum LIST_VIEWER_INSTRUCTIONS {
  ADD_ITEMS_TO_LIST = HUB_INSTRUCTION.ADD_ITEM_TO_LIST,
  PROGRAM_DELETE_ITEM = HUB_INSTRUCTION.PROGRAM_DELETE_ITEM,
  RELOAD_DATA = DATA_VIEWER_INSTRUCTIONS.RELOAD_MAIN_DATA,
  ADD_FILES_TO_LIST = HUB_INSTRUCTION.ADD_FILES_TO_LIST,
  ADD_ZOTERO_COLLECTION_KEY = IMPORT_SOURCE_INSTRUCTIONS.ADD_ZOTERO_COLLECTION_KEY
}


export enum READING_CONTROL_INSTRUCTIION {
  READ_NEXT = HUB_INSTRUCTION.READ_NEXT
}

export enum READING_SERVICE_INSTRUCTIONS {
  SET_CURRENT_ITEM_READ = HUB_INSTRUCTION.READING_SERVICE_SET_CURRENT_ITEM_READ,
}

export enum PROGRAM_LIST_INSTRUCTIONS {
  SET_PROGRAM_LIST_ITEM_READ = HUB_INSTRUCTION.SET_PROGRAMLIST_ITEM_READ_BY_PROGRAMITEM_ID,

}

export enum UPDATE_WORKING_STATE_INSTRUCTIONS {

  UPDATE_CURRENT_PROJECT = "UPDATE_CURRENT_PROJECT",
  UPDATE_CURRENT_PROGRAM = "UPDATE_CURRENT_PROGRAM",
  UPDATE_CURRENT_LIST = "UPDATE_CURRENT_LIST",
  UPDATE_CURRENT_READING = "UPDATE_CURRENT_READING",
  UPDATE_SERVER_STATUS = "UPDATE_SERVER_STATUS",
}

export enum PGC_INSTRUCTIONS {

}

export enum ITEM_VIEWER_INSTRUCTIONS {
  DETECT_CHANGE = HUB_INSTRUCTION.DETECT_CHANGE,
  RELOAD_DATA = HUB_INSTRUCTION.RELOAD_MAIN_DATA
}

export enum LIST_COMPONENT_INSTRUCTIONS {
  DETECT_CHANGE = HUB_INSTRUCTION.DETECT_CHANGE
}

export enum STATUS_INSTRUCTIONS {

}

export enum COMPONENTHEADER_INSTRUCTIONS {
  ADD_ITEM_TO_PROGRAM = HUB_INSTRUCTION.ADD_ITEM_TO_PROGRAM,
  COMPONENTHEADER_INSTRUCTION = HUB_INSTRUCTION.BLANK_INSTRUCTION,
}

export enum ITEM_CONTROL_INSTRUCTIONS {
  SET_ITEM_IMPORTANCE = HUB_INSTRUCTION.ITEM_CONTROL_SET_ITEM_IMPORTANCE,
  SELECT_ITEM = HUB_INSTRUCTION.SELECT_ITEM,
  ADD_ITEM = HUB_INSTRUCTION.ADD_ITEM,

  REMOVE_ITEM = HUB_INSTRUCTION.REMOVE_ITEM,
  UNSELECT_ITEM = HUB_INSTRUCTION.UNSELECT_ITEM,
}

export enum APITESTER_INSTRUCTIONS {

}

export enum ROUTINE_BROWSER_INSTRUCTIONS {}

export enum ROUTINE_VIEWER_INSTRUCTIONS {
  RELOAD_DATA = DATA_VIEWER_INSTRUCTIONS.RELOAD_MAIN_DATA
}

export enum ROUTINE_ITEM_INSTRUCTIONS {

}

export enum ZOTERO_BROWSER_INSTRUCTIONS {}
